{"version":3,"file":"static/js/724.aa52bd7f.chunk.js","mappings":"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","sources":["pages/MovieDetails/MovieDetailsPage.js"],"sourcesContent":["import {\n  Outlet,\n  useLocation,\n  useParams,\n  Link,\n  NavLink,\n} from 'react-router-dom';\nimport { useEffect, useRef, useState } from 'react';\nimport { fetchMovieDetails } from 'Api';\nimport toast from 'react-hot-toast';\nimport { FaArrowLeft } from 'react-icons/fa6';\n\nexport default function MovieDetailsPage() {\n  const [isLoading, setIsLoading] = useState(false);\n  const [movie, setMovie] = useState(null);\n\n  const location = useLocation();\n  const backLinckRef = useRef(location);\n  const param = useParams();\n\n  const goBack = backLinckRef.current.state?.from ?? '/';\n\n  useEffect(() => {\n    async function fetchMovie() {\n      setIsLoading(true);\n      try {\n        const fetchedMovie = await fetchMovieDetails(param.movieId);\n        setMovie(fetchedMovie);\n      } catch (error) {\n        toast.error('Ooops! Something went wrong. Try reloading page!');\n      } finally {\n        setIsLoading(false);\n      }\n    }\n    fetchMovie();\n  }, [param.movieId]);\n\n  return (\n    <>\n      {isLoading && <div>LOADING...</div>}\n\n      <div>\n        <Link to={goBack}>\n          <FaArrowLeft />\n          Go Back\n        </Link>\n      </div>\n\n      <div>\n        {movie && (\n          <div>\n            <img\n              src={\n                movie.poster_path\n                  ? `https://image.tmdb.org/t/p/w500/${movie.poster_path}`\n                  : 'https://www.colorbook.io/imagecreator.php?width=400&height=600&hex=%23cecece'\n              }\n              alt={movie.original_title}\n            />\n            <div>\n              <h1>{movie.original_title}</h1>\n              <p>User score: {movie.vote_average}</p>\n              <div>\n                <h2>Overview</h2>\n                <p>{movie.overview}</p>\n              </div>\n              <div>\n                <h2>Genres</h2>\n                <ul>\n                  {movie.genres &&\n                    movie.genres.map(genre => (\n                      <li key={genre.id}>{genre.name}</li>\n                    ))}\n                </ul>\n              </div>\n            </div>\n          </div>\n        )}\n      </div>\n      <div>\n        <h2>Additional information</h2>\n        <ul>\n          <li>\n            <NavLink to=\"cast\">Cast</NavLink>\n          </li>\n          <li>\n            <NavLink to=\"reviews\">Reviews</NavLink>\n          </li>\n        </ul>\n      </div>\n      <Outlet />\n    </>\n  );\n};\n"],"names":["MovieDetailsPage","_backLinckRef$current","_backLinckRef$current2","_useState","useState","_useState2","_slicedToArray","isLoading","setIsLoading","_useState3","_useState4","movie","setMovie","location","useLocation","backLinckRef","useRef","param","useParams","goBack","current","state","from","useEffect","_fetchMovie","_asyncToGenerator","_regeneratorRuntime","_callee","fetchedMovie","_context","prev","next","fetchMovieDetails","movieId","sent","t0","toast","finish","stop","apply","arguments","fetchMovie","_jsxs","_Fragment","children","_jsx","Link","to","FaArrowLeft","src","poster_path","concat","alt","original_title","vote_average","overview","genres","map","genre","name","id","NavLink","Outlet"],"sourceRoot":""}