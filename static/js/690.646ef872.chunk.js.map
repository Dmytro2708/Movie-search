{"version":3,"file":"static/js/690.646ef872.chunk.js","mappings":"gRAMe,SAASA,IACtB,IAAAC,GAAkCC,EAAAA,EAAAA,WAAS,GAAMC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA1CI,EAASF,EAAA,GAAEG,EAAYH,EAAA,GAC9BI,GAAkCL,EAAAA,EAAAA,UAAS,IAAGM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAAvCE,EAASD,EAAA,GAAEE,EAAYF,EAAA,GACxBG,GAAWC,EAAAA,EAAAA,MAiBjB,OAfAC,EAAAA,EAAAA,YAAU,WACgB,SAAAC,IAUvB,OAVuBA,GAAAC,EAAAA,EAAAA,GAAAC,IAAAA,MAAxB,SAAAC,IAAA,IAAAC,EAAA,OAAAF,IAAAA,MAAA,SAAAG,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OACqB,OAAnBf,GAAa,GAAMa,EAAAC,KAAA,EAAAD,EAAAE,KAAA,GAEEC,EAAAA,EAAAA,MAAa,KAAD,EAAzBJ,EAAIC,EAAAI,KACVb,EAAaQ,GAAMC,EAAAE,KAAA,gBAAAF,EAAAC,KAAA,EAAAD,EAAAK,GAAAL,EAAA,SAEnBM,EAAAA,GAAAA,MAAY,oDAAoD,QAE5C,OAF4CN,EAAAC,KAAA,GAEhEd,GAAa,GAAOa,EAAAO,OAAA,6BAAAP,EAAAQ,OAAA,GAAAV,EAAA,yBAEvBW,MAAA,KAAAC,UAAA,EAXc,WACSf,EAAAc,MAAC,KAADC,UAAA,CAWxBC,EACF,GAAG,KAGDC,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAC,SAAA,EACEC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,mBACH5B,IAAa6B,EAAAA,EAAAA,KAAA,OAAAD,SAAK,gBACnBC,EAAAA,EAAAA,KAAA,MAAAD,SACGxB,EAAU0B,KAAI,SAAAC,GAA0C,IAAvCC,EAAED,EAAFC,GAAIC,EAAcF,EAAdE,eAAgBC,EAAWH,EAAXG,YACpC,OACEL,EAAAA,EAAAA,KAAA,MAAAD,UACEF,EAAAA,EAAAA,MAACS,EAAAA,GAAI,CAACC,GAAE,WAAAC,OAAaL,GAAMM,MAAO,CAAEC,KAAMjC,GAAWsB,SAAA,EACnDC,EAAAA,EAAAA,KAAA,OACPW,IACCN,EAAW,mCAAAG,OAC4BH,GACnC,+EAEJO,IAAKR,KAECJ,EAAAA,EAAAA,KAAA,KAAAD,SAAIK,QAVCD,EAcb,QAIR,C","sources":["pages/Home/HomePage.js"],"sourcesContent":["import { Link, useLocation } from 'react-router-dom';\nimport { fetchTrend } from 'Api';\nimport { useEffect, useState } from 'react';\n\nimport toast from 'react-hot-toast';\n\nexport default function HomePage() {\n  const [isLoading, setIsLoading] = useState(false);\n  const [trendings, setTrendings] = useState([]);\n  const location = useLocation();\n\n  useEffect(() => {\n    async function getMovies() {\n      setIsLoading(true);\n      try {\n        const data = await fetchTrend();\n        setTrendings(data);\n      } catch (error) {\n        toast.error('Ooops! Something went wrong. Try reloading page!');\n      } finally {\n        setIsLoading(false);\n      }\n    }\n    getMovies();\n  }, []);\n\n  return (\n    <>\n      <h1>Trending today</h1>\n      {isLoading && <div>LOADING...</div>}\n      <ul>\n        {trendings.map(({ id, original_title, poster_path }) => {\n          return (\n            <li key={id}>\n              <Link to={`/movies/${id}`} state={{ from: location }}>\n                <img\n         src={\n          poster_path\n            ? `https://image.tmdb.org/t/p/w500/${poster_path}`\n            : 'https://www.colorbook.io/imagecreator.php?width=200&height=300&hex=%23cecece'\n        }\n          alt={original_title}\n        />\n                <p>{original_title}</p>\n              </Link>\n            </li>\n          );\n        })}\n      </ul>\n    </>\n  );\n};\n"],"names":["HomePage","_useState","useState","_useState2","_slicedToArray","isLoading","setIsLoading","_useState3","_useState4","trendings","setTrendings","location","useLocation","useEffect","_getMovies","_asyncToGenerator","_regeneratorRuntime","_callee","data","_context","prev","next","fetchTrend","sent","t0","toast","finish","stop","apply","arguments","getMovies","_jsxs","_Fragment","children","_jsx","map","_ref","id","original_title","poster_path","Link","to","concat","state","from","src","alt"],"sourceRoot":""}