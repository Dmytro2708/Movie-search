{"version":3,"file":"static/js/944.01613581.chunk.js","mappings":"gRAKe,SAASA,IAAc,IAADC,EACnCC,GAA4BC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAjCI,EAAMF,EAAA,GAAEG,EAASH,EAAA,GACxBI,GAAkCL,EAAAA,EAAAA,WAAS,GAAMM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAA1CE,EAASD,EAAA,GAAEE,EAAYF,EAAA,GAC9BG,GAAwCC,EAAAA,EAAAA,MAAiBC,GAAAT,EAAAA,EAAAA,GAAAO,EAAA,GAAlDG,EAAYD,EAAA,GAAEE,EAAeF,EAAA,GAC9BG,GAAWC,EAAAA,EAAAA,MACXC,EAAiC,QAA5BlB,EAAGc,EAAaK,IAAI,gBAAQ,IAAAnB,EAAAA,EAAI,IAE3CoB,EAAAA,EAAAA,YAAU,WAIsB,SAAAC,IAU7B,OAV6BA,GAAAC,EAAAA,EAAAA,GAAAC,IAAAA,MAA9B,SAAAC,IAAA,IAAAC,EAAA,OAAAF,IAAAA,MAAA,SAAAG,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OACqB,OAAnBlB,GAAa,GAAMgB,EAAAC,KAAA,EAAAD,EAAAE,KAAA,GAEWC,EAAAA,EAAAA,IAAYX,GAAO,KAAD,EAAxCO,EAAaC,EAAAI,KACnBxB,EAAUmB,GAAeC,EAAAE,KAAA,gBAAAF,EAAAC,KAAA,EAAAD,EAAAK,GAAAL,EAAA,SAEzBM,EAAAA,GAAAA,MAAY,oDAAoD,QAE5C,OAF4CN,EAAAC,KAAA,GAEhEjB,GAAa,GAAOgB,EAAAO,OAAA,6BAAAP,EAAAQ,OAAA,GAAAV,EAAA,yBAEvBW,MAAA,KAAAC,UAAA,CAba,KAAVlB,GAEH,WAC6BG,EAAAc,MAAC,KAADC,UAAA,CAW9BC,EACF,GAAG,CAACnB,IAWJ,OACEoB,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAC,SAAA,EACEC,EAAAA,EAAAA,KAAA,OAAAD,UACEC,EAAAA,EAAAA,KAAA,QAAMC,SAZU,SAAAC,GACpBA,EAAIC,iBAEJ,IAAMC,EAAcF,EAAIG,cAAc5B,MAAM6B,MAE5CjC,EAAakC,IAAI,QAASH,EAAYI,cAAcC,QACpDnC,EAAgBD,EAClB,EAKoC0B,UAC5BF,EAAAA,EAAAA,MAAA,OAAAE,SAAA,EACEC,EAAAA,EAAAA,KAAA,SAAOU,KAAK,OAAOC,KAAK,QAAQC,aAAa,MAAMC,YAAY,MAC/Db,EAAAA,EAAAA,KAAA,SAAAD,SAAO,mBACPC,EAAAA,EAAAA,KAAA,UAAQU,KAAK,SAAQX,UACnBC,EAAAA,EAAAA,KAAA,QAAAD,SAAM,oBAKb/B,IAAagC,EAAAA,EAAAA,KAAA,OAAAD,SAAK,eAClBnC,EAAOkD,OAAS,IACfd,EAAAA,EAAAA,KAAA,MAAAD,SACGnC,EAAOmD,KAAI,SAAAC,GAA0C,IAAvCC,EAAED,EAAFC,GAAIC,EAAcF,EAAdE,eAAgBC,EAAWH,EAAXG,YACjC,OACEnB,EAAAA,EAAAA,KAAA,MAAAD,UACEF,EAAAA,EAAAA,MAACuB,EAAAA,GAAI,CAACC,GAAE,WAAAC,OAAaL,GAAMM,MAAO,CAAEC,KAAMjD,GAAWwB,SAAA,EACnDC,EAAAA,EAAAA,KAAA,OACEyB,IACEN,EAAW,mCAAAG,OAC4BH,GACnC,+EAENO,IAAKR,KAEPlB,EAAAA,EAAAA,KAAA,KAAAD,SAAImB,QAVCD,EAcb,QAKV,C","sources":["pages/Movies/MoviesPage.js"],"sourcesContent":["import { fetchMovies } from 'Api';\nimport { useEffect, useState } from 'react';\nimport toast from 'react-hot-toast';\nimport { useSearchParams, useLocation, Link } from 'react-router-dom';\n\nexport default function MoviesPage() {\n  const [movies, setMovies] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const location = useLocation();\n  const query = searchParams.get('query') ?? '';\n\n  useEffect(() => {\n    if (query === '') {\n      return;\n    }\n    async function getMovieByQuery() {\n      setIsLoading(true);\n      try {\n        const fetchedMovies = await fetchMovies(query);\n        setMovies(fetchedMovies);\n      } catch (error) {\n        toast.error('Ooops! Something went wrong. Try reloading page!');\n      } finally {\n        setIsLoading(false);\n      }\n    }\n    getMovieByQuery();\n  }, [query]);\n\n  const searchHandler = evt => {\n    evt.preventDefault();\n\n    const searchQuery = evt.currentTarget.query.value;\n\n    searchParams.set('query', searchQuery.toLowerCase().trim());\n    setSearchParams(searchParams);\n  };\n\n  return (\n    <>\n      <div>\n        <form onSubmit={searchHandler}>\n          <div>\n            <input type=\"text\" name=\"query\" autoComplete=\"off\" placeholder=\"\" />\n            <label>Search movies</label>\n            <button type=\"submit\">\n              <span>Search</span>\n            </button>\n          </div>\n        </form>\n      </div>\n      {isLoading && <div>LOADING...</div>}\n      {movies.length > 0 && (\n        <ul>\n          {movies.map(({ id, original_title, poster_path }) => {\n            return (\n              <li key={id}>\n                <Link to={`/movies/${id}`} state={{ from: location }}>\n                  <img\n                    src={\n                      poster_path\n                        ? `https://image.tmdb.org/t/p/w500/${poster_path}`\n                        : 'https://www.colorbook.io/imagecreator.php?width=200&height=300&hex=%23cecece'\n                    }\n                    alt={original_title}\n                  />\n                  <p>{original_title}</p>\n                </Link>\n              </li>\n            );\n          })}\n        </ul>\n      )}\n    </>\n  );\n};\n"],"names":["MoviesPage","_searchParams$get","_useState","useState","_useState2","_slicedToArray","movies","setMovies","_useState3","_useState4","isLoading","setIsLoading","_useSearchParams","useSearchParams","_useSearchParams2","searchParams","setSearchParams","location","useLocation","query","get","useEffect","_getMovieByQuery","_asyncToGenerator","_regeneratorRuntime","_callee","fetchedMovies","_context","prev","next","fetchMovies","sent","t0","toast","finish","stop","apply","arguments","getMovieByQuery","_jsxs","_Fragment","children","_jsx","onSubmit","evt","preventDefault","searchQuery","currentTarget","value","set","toLowerCase","trim","type","name","autoComplete","placeholder","length","map","_ref","id","original_title","poster_path","Link","to","concat","state","from","src","alt"],"sourceRoot":""}