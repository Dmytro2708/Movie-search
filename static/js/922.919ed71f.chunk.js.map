{"version":3,"file":"static/js/922.919ed71f.chunk.js","mappings":"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","sources":["pages/Home/HomePage.styled.js","pages/Movies/MoviesPage.styled.js","pages/Movies/MoviesPage.js"],"sourcesContent":["import styled from \"styled-components\";\nimport { Link as ItemLink } from 'react-router-dom';\n\n\nexport const Title = styled.h1`\n   margin-bottom: 20px;\n   text-align: center;\n`;\n\nexport const MovieUl = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  row-gap: 25px;\n  column-gap: 20px;\n  width: 100%;\n`;\n\nexport const MovieLi = styled.li`\n  width: 200px;\n  width: calc((100% - 140px) / 5);\n  text-overflow: ellipsis;\n  overflow: hidden;\n  text-decoration: none;\n\n  transition: transform 200ms linear;\n\n  &:hover, &:focus {\n    transform: scale(1.05);\n  }\n`;\n\nexport const Link = styled(ItemLink)`\n  white-space: nowrap;\n  text-overflow: ellipsis;\n  overflow: hidden;\n  text-decoration: none;\n  \n`;\n\nexport const Img = styled.img`\n  border-radius: 10px;\n  margin-bottom: 6px;\n  border-radius: 40px;\n`;\n\nexport const MovieTitle = styled.p`\nfont-weight: 700;\n  font-size: 24px;\n  text-align: center;\n  padding: 10px;\n`;","import styled from 'styled-components';\n\nexport const Form = styled.form`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 100%;\n  margin: 0 auto;\n  margin-bottom: 20px;\n`;\n\nexport const Label = styled.label`\n  color: black;\n  font-weight: 700;\n  font-size: 24px;\n  padding-right: 8px;\n`;\n\nexport const Input = styled.input`\n  font-size: 20px;\n  border-radius: 10px;\n  width: 600px;\n  height: 50px;\n  outline: none;\n  border: 1px solid #ffd466;\n  padding: 5px;\n  margin-right: 8px;\n`;\n\nexport const Button = styled.button`\n  font-size: 24px;\n  line-height: 24px;\n  font-weight: 500;\n   width: 100px;\n  height: 50px;\n  outline: none;\n  border: none;\n  border-radius: 10px;\n  background-color: #ffd466;\n  color: #1e1f27;\n  &:hover, &:focus {\n    transform: scale(1.05);\n    background-color: #EE82EE;\n  }\n`;","import { fetchMovies } from 'Api';\nimport { useEffect, useState } from 'react';\nimport toast from 'react-hot-toast';\nimport { useSearchParams, useLocation } from 'react-router-dom';\nimport { MovieUl, MovieLi, Link, Img, MovieTitle } from '../Home/HomePage.styled';\nimport { Form, Label, Input, Button } from './MoviesPage.styled';\n\nexport default function MoviesPage() {\n  const [movies, setMovies] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const location = useLocation();\n  const query = searchParams.get('query') ?? '';\n\n  useEffect(() => {\n    if (query === '') {\n      return;\n    }\n    async function getMovieByQuery() {\n      setIsLoading(true);\n      try {\n        const fetchedMovies = await fetchMovies(query);\n        setMovies(fetchedMovies);\n      } catch (error) {\n        toast.error('Ooops! Something went wrong. Try reloading page!');\n      } finally {\n        setIsLoading(false);\n      }\n    }\n    getMovieByQuery();\n  }, [query]);\n\n  const searchHandler = evt => {\n    evt.preventDefault();\n\n    const searchQuery = evt.currentTarget.query.value;\n\n    searchParams.set('query', searchQuery.toLowerCase().trim());\n    setSearchParams(searchParams);\n  };\n\n  return (\n    <>\n      <div>\n        <Form onSubmit={searchHandler}>\n          <div>\n            <Label>Search movies</Label>\n            <Input type=\"text\" name=\"query\" autoComplete=\"off\" placeholder=\"\" />\n             <Button type=\"submit\">\n              <span>Search</span>\n            </Button>\n          </div>\n        </Form>\n      </div>\n      {isLoading && <div>LOADING...</div>}\n      {movies.length > 0 && (\n        <MovieUl>\n          {movies.map(({ id, original_title, poster_path }) => {\n            return (\n              <MovieLi key={id}>\n                <Link to={`/movies/${id}`} state={{ from: location }}>\n                  <Img\n                    src={\n                      poster_path\n                        ? `https://image.tmdb.org/t/p/w500/${poster_path}`\n                        : 'https://www.colorbook.io/imagecreator.php?width=200&height=300&hex=%23cecece'\n                    }\n                    alt={original_title}\n                  />\n                  <MovieTitle>{original_title}</MovieTitle>\n                </Link>\n              </MovieLi>\n            );\n          })}\n        </MovieUl>\n      )}\n    </>\n  );\n};\n"],"names":["Title","styled","_templateObject","_taggedTemplateLiteral","MovieUl","_templateObject2","MovieLi","_templateObject3","Link","ItemLink","_templateObject4","Img","_templateObject5","MovieTitle","_templateObject6","Form","Label","Input","Button","MoviesPage","_searchParams$get","_useState","useState","_useState2","_slicedToArray","movies","setMovies","_useState3","_useState4","isLoading","setIsLoading","_useSearchParams","useSearchParams","_useSearchParams2","searchParams","setSearchParams","location","useLocation","query","get","useEffect","_getMovieByQuery","_asyncToGenerator","_regeneratorRuntime","_callee","fetchedMovies","_context","prev","next","fetchMovies","sent","t0","toast","finish","stop","apply","arguments","getMovieByQuery","_jsxs","_Fragment","children","_jsx","onSubmit","evt","preventDefault","searchQuery","currentTarget","value","set","toLowerCase","trim","type","name","autoComplete","placeholder","length","map","_ref","id","original_title","poster_path","to","concat","state","from","src","alt"],"sourceRoot":""}